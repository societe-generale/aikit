# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        # remove --exit-zero on next line when flake8 is fixed
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  python_versions:
    name: Python 3.8/3.9

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        scikitlearn-version: [1.0.2]
        pandas-version: [1.4.0]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install pandas==${{ matrix.pandas-version }}
        pip install scikit-learn==${{ matrix.scikitlearn-version }}
    - name: Install NLTK
      run: |
        python -m nltk.downloader punkt
        python -m nltk.downloader stopwords
    - name: Test with pytest
      run: |
        pytest tests -v -m "not longtest"

  lib_versions:
    name: Scikit-learn+Pandas
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scikitlearn-version: [0.23.2, 0.24.2, 1.0.2]
        pandas-version: [1.3.5, 1.4.0]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install pandas==${{ matrix.pandas-version }}
        pip install scikit-learn==${{ matrix.scikitlearn-version }}
    - name: Install NLTK
      run: |
        python -m nltk.downloader punkt
        python -m nltk.downloader stopwords
    - name: Test with pytest
      run: |
        pytest tests -v -m "not longtest"
